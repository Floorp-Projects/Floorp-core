{"version":3,"file":"qr-code-styling.js","sources":["../src/constants/modes.ts","../src/tools/getMode.ts","../src/tools/merge.ts","../src/tools/downloadURI.ts","../src/tools/calculateImageSize.ts","../src/constants/errorCorrectionPercents.ts","../src/constants/dotTypes.ts","../src/figures/dot/canvas/QRDot.ts","../src/constants/cornerSquareTypes.ts","../src/figures/cornerSquare/canvas/QRCornerSquare.ts","../src/constants/cornerDotTypes.ts","../src/figures/cornerDot/canvas/QRCornerDot.ts","../src/constants/gradientTypes.ts","../src/core/QRCanvas.ts","../src/figures/dot/svg/QRDot.ts","../src/figures/cornerSquare/svg/QRCornerSquare.ts","../src/figures/cornerDot/svg/QRCornerDot.ts","../src/core/QRSVG.ts","../src/constants/drawTypes.ts","../src/constants/qrTypes.ts","../src/constants/errorCorrectionLevels.ts","../src/core/QROptions.ts","../src/tools/sanitizeOptions.ts","../node_modules/.pnpm/qrcode-generator@1.4.4/node_modules/qrcode-generator/qrcode.js","../src/core/QRCodeStyling.ts"],"sourcesContent":["import { Mode } from \"../types\";\r\n\r\ninterface Modes {\r\n  [key: string]: Mode;\r\n}\r\n\r\nexport default {\r\n  numeric: \"Numeric\",\r\n  alphanumeric: \"Alphanumeric\",\r\n  byte: \"Byte\",\r\n  kanji: \"Kanji\"\r\n} as Modes;\r\n","import modes from \"../constants/modes\";\r\nimport { Mode } from \"../types\";\r\n\r\nexport default function getMode(data: string): Mode {\r\n  switch (true) {\r\n    case /^[0-9]*$/.test(data):\r\n      return modes.numeric;\r\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\r\n      return modes.alphanumeric;\r\n    default:\r\n      return modes.byte;\r\n  }\r\n}\r\n","import { UnknownObject } from \"../types\";\r\n\r\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\r\n\r\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\r\n  if (!sources.length) return target;\r\n  const source = sources.shift();\r\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\r\n  target = { ...target };\r\n  Object.keys(source).forEach((key: string): void => {\r\n    const targetValue = target[key];\r\n    const sourceValue = source[key];\r\n\r\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\r\n      target[key] = sourceValue;\r\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\r\n    } else {\r\n      target[key] = sourceValue;\r\n    }\r\n  });\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n","export default function downloadURI(uri: string, name: string): void {\r\n  const link = document.createElement(\"a\");\r\n  link.download = name;\r\n  link.href = uri;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n}\r\n","interface ImageSizeOptions {\r\n  originalHeight: number;\r\n  originalWidth: number;\r\n  maxHiddenDots: number;\r\n  maxHiddenAxisDots?: number;\r\n  dotSize: number;\r\n}\r\n\r\ninterface ImageSizeResult {\r\n  height: number;\r\n  width: number;\r\n  hideYDots: number;\r\n  hideXDots: number;\r\n}\r\n\r\nexport default function calculateImageSize({\r\n  originalHeight,\r\n  originalWidth,\r\n  maxHiddenDots,\r\n  maxHiddenAxisDots,\r\n  dotSize\r\n}: ImageSizeOptions): ImageSizeResult {\r\n  const hideDots = { x: 0, y: 0 };\r\n  const imageSize = { x: 0, y: 0 };\r\n\r\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\r\n    return {\r\n      height: 0,\r\n      width: 0,\r\n      hideYDots: 0,\r\n      hideXDots: 0\r\n    };\r\n  }\r\n\r\n  const k = originalHeight / originalWidth;\r\n\r\n  //Getting the maximum possible axis hidden dots\r\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\r\n  //The count of hidden dot's can't be less than 1\r\n  if (hideDots.x <= 0) hideDots.x = 1;\r\n  //Check the limit of the maximum allowed axis hidden dots\r\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\r\n  //The count of dots should be odd\r\n  if (hideDots.x % 2 === 0) hideDots.x--;\r\n  imageSize.x = hideDots.x * dotSize;\r\n  //Calculate opposite axis hidden dots based on axis value.\r\n  //The value will be odd.\r\n  //We use ceil to prevent dots covering by the image.\r\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\r\n  imageSize.y = Math.round(imageSize.x * k);\r\n  //If the result dots count is bigger than max - then decrease size and calculate again\r\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\r\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\r\n      hideDots.y = maxHiddenAxisDots;\r\n      if (hideDots.y % 2 === 0) hideDots.x--;\r\n    } else {\r\n      hideDots.y -= 2;\r\n    }\r\n    imageSize.y = hideDots.y * dotSize;\r\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\r\n    imageSize.x = Math.round(imageSize.y / k);\r\n  }\r\n\r\n  return {\r\n    height: imageSize.y,\r\n    width: imageSize.x,\r\n    hideYDots: hideDots.y,\r\n    hideXDots: hideDots.x\r\n  };\r\n}\r\n","interface ErrorCorrectionPercents {\r\n  [key: string]: number;\r\n}\r\n\r\nexport default {\r\n  L: 0.07,\r\n  M: 0.15,\r\n  Q: 0.25,\r\n  H: 0.3\r\n} as ErrorCorrectionPercents;\r\n","import { DotTypes } from \"../types\";\r\n\r\nexport default {\r\n  dots: \"dots\",\r\n  rounded: \"rounded\",\r\n  classy: \"classy\",\r\n  classyRounded: \"classy-rounded\",\r\n  square: \"square\",\r\n  extraRounded: \"extra-rounded\"\r\n} as DotTypes;\r\n","import dotTypes from \"../../../constants/dotTypes\";\r\nimport {\r\n  DotType,\r\n  GetNeighbor,\r\n  RotateFigureArgsCanvas,\r\n  BasicFigureDrawArgsCanvas,\r\n  DrawArgsCanvas\r\n} from \"../../../types\";\r\n\r\nexport default class QRDot {\r\n  _context: CanvasRenderingContext2D;\r\n  _type: DotType;\r\n\r\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: DotType }) {\r\n    this._context = context;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\r\n    const context = this._context;\r\n    const type = this._type;\r\n    let drawFunction;\r\n\r\n    switch (type) {\r\n      case dotTypes.dots:\r\n        drawFunction = this._drawDot;\r\n        break;\r\n      case dotTypes.classy:\r\n        drawFunction = this._drawClassy;\r\n        break;\r\n      case dotTypes.classyRounded:\r\n        drawFunction = this._drawClassyRounded;\r\n        break;\r\n      case dotTypes.rounded:\r\n        drawFunction = this._drawRounded;\r\n        break;\r\n      case dotTypes.extraRounded:\r\n        drawFunction = this._drawExtraRounded;\r\n        break;\r\n      case dotTypes.square:\r\n      default:\r\n        drawFunction = this._drawSquare;\r\n    }\r\n\r\n    drawFunction.call(this, { x, y, size, context, getNeighbor });\r\n  }\r\n\r\n  _rotateFigure({ x, y, size, context, rotation = 0, draw }: RotateFigureArgsCanvas): void {\r\n    const cx = x + size / 2;\r\n    const cy = y + size / 2;\r\n\r\n    context.translate(cx, cy);\r\n    rotation && context.rotate(rotation);\r\n    draw();\r\n    context.closePath();\r\n    rotation && context.rotate(-rotation);\r\n    context.translate(-cx, -cy);\r\n  }\r\n\r\n  _basicDot(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(0, 0, size / 2, 0, Math.PI * 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicSquare(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.rect(-size / 2, -size / 2, size, size);\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - right side is rounded\r\n  _basicSideRounded(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(0, 0, size / 2, -Math.PI / 2, Math.PI / 2);\r\n        context.lineTo(-size / 2, size / 2);\r\n        context.lineTo(-size / 2, -size / 2);\r\n        context.lineTo(0, -size / 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - top right corner is rounded\r\n  _basicCornerRounded(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(0, 0, size / 2, -Math.PI / 2, 0);\r\n        context.lineTo(size / 2, size / 2);\r\n        context.lineTo(-size / 2, size / 2);\r\n        context.lineTo(-size / 2, -size / 2);\r\n        context.lineTo(0, -size / 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - top right corner is rounded\r\n  _basicCornerExtraRounded(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(-size / 2, size / 2, size, -Math.PI / 2, 0);\r\n        context.lineTo(-size / 2, size / 2);\r\n        context.lineTo(-size / 2, -size / 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicCornersRounded(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(0, 0, size / 2, -Math.PI / 2, 0);\r\n        context.lineTo(size / 2, size / 2);\r\n        context.lineTo(0, size / 2);\r\n        context.arc(0, 0, size / 2, Math.PI / 2, Math.PI);\r\n        context.lineTo(-size / 2, -size / 2);\r\n        context.lineTo(0, -size / 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicCornersExtraRounded(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(-size / 2, size / 2, size, -Math.PI / 2, 0);\r\n        context.arc(size / 2, -size / 2, size, Math.PI / 2, Math.PI);\r\n      }\r\n    });\r\n  }\r\n\r\n  _drawDot({ x, y, size, context }: DrawArgsCanvas): void {\r\n    this._basicDot({ x, y, size, context, rotation: 0 });\r\n  }\r\n\r\n  _drawSquare({ x, y, size, context }: DrawArgsCanvas): void {\r\n    this._basicSquare({ x, y, size, context, rotation: 0 });\r\n  }\r\n\r\n  _drawRounded({ x, y, size, context, getNeighbor }: DrawArgsCanvas): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicDot({ x, y, size, context, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\r\n      this._basicSquare({ x, y, size, context, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 2) {\r\n      let rotation = 0;\r\n\r\n      if (leftNeighbor && topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (topNeighbor && rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (rightNeighbor && bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicCornerRounded({ x, y, size, context, rotation });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 1) {\r\n      let rotation = 0;\r\n\r\n      if (topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicSideRounded({ x, y, size, context, rotation });\r\n      return;\r\n    }\r\n  }\r\n\r\n  _drawExtraRounded({ x, y, size, context, getNeighbor }: DrawArgsCanvas): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicDot({ x, y, size, context, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\r\n      this._basicSquare({ x, y, size, context, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 2) {\r\n      let rotation = 0;\r\n\r\n      if (leftNeighbor && topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (topNeighbor && rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (rightNeighbor && bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicCornerExtraRounded({ x, y, size, context, rotation });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 1) {\r\n      let rotation = 0;\r\n\r\n      if (topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicSideRounded({ x, y, size, context, rotation });\r\n      return;\r\n    }\r\n  }\r\n\r\n  _drawClassy({ x, y, size, context, getNeighbor }: DrawArgsCanvas): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicCornersRounded({ x, y, size, context, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!leftNeighbor && !topNeighbor) {\r\n      this._basicCornerRounded({ x, y, size, context, rotation: -Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!rightNeighbor && !bottomNeighbor) {\r\n      this._basicCornerRounded({ x, y, size, context, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    this._basicSquare({ x, y, size, context, rotation: 0 });\r\n  }\r\n\r\n  _drawClassyRounded({ x, y, size, context, getNeighbor }: DrawArgsCanvas): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicCornersRounded({ x, y, size, context, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!leftNeighbor && !topNeighbor) {\r\n      this._basicCornerExtraRounded({ x, y, size, context, rotation: -Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!rightNeighbor && !bottomNeighbor) {\r\n      this._basicCornerExtraRounded({ x, y, size, context, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    this._basicSquare({ x, y, size, context, rotation: 0 });\r\n  }\r\n}\r\n","import { CornerSquareTypes } from \"../types\";\r\n\r\nexport default {\r\n  dot: \"dot\",\r\n  square: \"square\",\r\n  extraRounded: \"extra-rounded\"\r\n} as CornerSquareTypes;\r\n","import cornerSquareTypes from \"../../../constants/cornerSquareTypes\";\r\nimport { CornerSquareType, RotateFigureArgsCanvas, BasicFigureDrawArgsCanvas, DrawArgsCanvas } from \"../../../types\";\r\n\r\nexport default class QRCornerSquare {\r\n  _context: CanvasRenderingContext2D;\r\n  _type: CornerSquareType;\r\n\r\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: CornerSquareType }) {\r\n    this._context = context;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, rotation: number): void {\r\n    const context = this._context;\r\n    const type = this._type;\r\n    let drawFunction;\r\n\r\n    switch (type) {\r\n      case cornerSquareTypes.square:\r\n        drawFunction = this._drawSquare;\r\n        break;\r\n      case cornerSquareTypes.extraRounded:\r\n        drawFunction = this._drawExtraRounded;\r\n        break;\r\n      case cornerSquareTypes.dot:\r\n      default:\r\n        drawFunction = this._drawDot;\r\n    }\r\n\r\n    drawFunction.call(this, { x, y, size, context, rotation });\r\n  }\r\n\r\n  _rotateFigure({ x, y, size, context, rotation = 0, draw }: RotateFigureArgsCanvas): void {\r\n    const cx = x + size / 2;\r\n    const cy = y + size / 2;\r\n\r\n    context.translate(cx, cy);\r\n    rotation && context.rotate(rotation);\r\n    draw();\r\n    context.closePath();\r\n    rotation && context.rotate(-rotation);\r\n    context.translate(-cx, -cy);\r\n  }\r\n\r\n  _basicDot(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n    const dotSize = size / 7;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(0, 0, size / 2, 0, Math.PI * 2);\r\n        context.arc(0, 0, size / 2 - dotSize, 0, Math.PI * 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicSquare(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n    const dotSize = size / 7;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.rect(-size / 2, -size / 2, size, size);\r\n        context.rect(-size / 2 + dotSize, -size / 2 + dotSize, size - 2 * dotSize, size - 2 * dotSize);\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicExtraRounded(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n    const dotSize = size / 7;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(-dotSize, -dotSize, 2.5 * dotSize, Math.PI, -Math.PI / 2);\r\n        context.lineTo(dotSize, -3.5 * dotSize);\r\n        context.arc(dotSize, -dotSize, 2.5 * dotSize, -Math.PI / 2, 0);\r\n        context.lineTo(3.5 * dotSize, -dotSize);\r\n        context.arc(dotSize, dotSize, 2.5 * dotSize, 0, Math.PI / 2);\r\n        context.lineTo(-dotSize, 3.5 * dotSize);\r\n        context.arc(-dotSize, dotSize, 2.5 * dotSize, Math.PI / 2, Math.PI);\r\n        context.lineTo(-3.5 * dotSize, -dotSize);\r\n\r\n        context.arc(-dotSize, -dotSize, 1.5 * dotSize, Math.PI, -Math.PI / 2);\r\n        context.lineTo(dotSize, -2.5 * dotSize);\r\n        context.arc(dotSize, -dotSize, 1.5 * dotSize, -Math.PI / 2, 0);\r\n        context.lineTo(2.5 * dotSize, -dotSize);\r\n        context.arc(dotSize, dotSize, 1.5 * dotSize, 0, Math.PI / 2);\r\n        context.lineTo(-dotSize, 2.5 * dotSize);\r\n        context.arc(-dotSize, dotSize, 1.5 * dotSize, Math.PI / 2, Math.PI);\r\n        context.lineTo(-2.5 * dotSize, -dotSize);\r\n      }\r\n    });\r\n  }\r\n\r\n  _drawDot({ x, y, size, context, rotation }: DrawArgsCanvas): void {\r\n    this._basicDot({ x, y, size, context, rotation });\r\n  }\r\n\r\n  _drawSquare({ x, y, size, context, rotation }: DrawArgsCanvas): void {\r\n    this._basicSquare({ x, y, size, context, rotation });\r\n  }\r\n\r\n  _drawExtraRounded({ x, y, size, context, rotation }: DrawArgsCanvas): void {\r\n    this._basicExtraRounded({ x, y, size, context, rotation });\r\n  }\r\n}\r\n","import { CornerDotTypes } from \"../types\";\r\n\r\nexport default {\r\n  dot: \"dot\",\r\n  square: \"square\"\r\n} as CornerDotTypes;\r\n","import cornerDotTypes from \"../../../constants/cornerDotTypes\";\r\nimport { CornerDotType, RotateFigureArgsCanvas, BasicFigureDrawArgsCanvas, DrawArgsCanvas } from \"../../../types\";\r\n\r\nexport default class QRCornerDot {\r\n  _context: CanvasRenderingContext2D;\r\n  _type: CornerDotType;\r\n\r\n  constructor({ context, type }: { context: CanvasRenderingContext2D; type: CornerDotType }) {\r\n    this._context = context;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, rotation: number): void {\r\n    const context = this._context;\r\n    const type = this._type;\r\n    let drawFunction;\r\n\r\n    switch (type) {\r\n      case cornerDotTypes.square:\r\n        drawFunction = this._drawSquare;\r\n        break;\r\n      case cornerDotTypes.dot:\r\n      default:\r\n        drawFunction = this._drawDot;\r\n    }\r\n\r\n    drawFunction.call(this, { x, y, size, context, rotation });\r\n  }\r\n\r\n  _rotateFigure({ x, y, size, context, rotation = 0, draw }: RotateFigureArgsCanvas): void {\r\n    const cx = x + size / 2;\r\n    const cy = y + size / 2;\r\n\r\n    context.translate(cx, cy);\r\n    rotation && context.rotate(rotation);\r\n    draw();\r\n    context.closePath();\r\n    rotation && context.rotate(-rotation);\r\n    context.translate(-cx, -cy);\r\n  }\r\n\r\n  _basicDot(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.arc(0, 0, size / 2, 0, Math.PI * 2);\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicSquare(args: BasicFigureDrawArgsCanvas): void {\r\n    const { size, context } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        context.rect(-size / 2, -size / 2, size, size);\r\n      }\r\n    });\r\n  }\r\n\r\n  _drawDot({ x, y, size, context, rotation }: DrawArgsCanvas): void {\r\n    this._basicDot({ x, y, size, context, rotation });\r\n  }\r\n\r\n  _drawSquare({ x, y, size, context, rotation }: DrawArgsCanvas): void {\r\n    this._basicSquare({ x, y, size, context, rotation });\r\n  }\r\n}\r\n","import { GradientTypes } from \"../types\";\r\n\r\nexport default {\r\n  radial: \"radial\",\r\n  linear: \"linear\"\r\n} as GradientTypes;\r\n","import calculateImageSize from \"../tools/calculateImageSize\";\r\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\r\nimport QRDot from \"../figures/dot/canvas/QRDot\";\r\nimport QRCornerSquare from \"../figures/cornerSquare/canvas/QRCornerSquare\";\r\nimport QRCornerDot from \"../figures/cornerDot/canvas/QRCornerDot\";\r\nimport { RequiredOptions } from \"./QROptions\";\r\nimport gradientTypes from \"../constants/gradientTypes\";\r\nimport { QRCode, Gradient, FilterFunction } from \"../types\";\r\n\r\nconst squareMask = [\r\n  [1, 1, 1, 1, 1, 1, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 1, 1, 1, 1, 1, 1]\r\n];\r\n\r\nconst dotMask = [\r\n  [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 1, 1, 1, 0, 0],\r\n  [0, 0, 1, 1, 1, 0, 0],\r\n  [0, 0, 1, 1, 1, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0]\r\n];\r\n\r\nexport default class QRCanvas {\r\n  _canvas: HTMLCanvasElement;\r\n  _options: RequiredOptions;\r\n  _qr?: QRCode;\r\n  _image?: HTMLImageElement;\r\n\r\n  //TODO don't pass all options to this class\r\n  constructor(options: RequiredOptions) {\r\n    this._canvas = document.createElement(\"canvas\");\r\n    this._canvas.width = options.width;\r\n    this._canvas.height = options.height;\r\n    this._options = options;\r\n  }\r\n\r\n  get context(): CanvasRenderingContext2D | null {\r\n    return this._canvas.getContext(\"2d\");\r\n  }\r\n\r\n  get width(): number {\r\n    return this._canvas.width;\r\n  }\r\n\r\n  get height(): number {\r\n    return this._canvas.height;\r\n  }\r\n\r\n  getCanvas(): HTMLCanvasElement {\r\n    return this._canvas;\r\n  }\r\n\r\n  clear(): void {\r\n    const canvasContext = this.context;\r\n\r\n    if (canvasContext) {\r\n      canvasContext.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n  }\r\n\r\n  async drawQR(qr: QRCode): Promise<void> {\r\n    const count = qr.getModuleCount();\r\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\r\n    const dotSize = Math.floor(minSize / count);\r\n    let drawImageSize = {\r\n      hideXDots: 0,\r\n      hideYDots: 0,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n\r\n    this._qr = qr;\r\n\r\n    if (this._options.image) {\r\n      await this.loadImage();\r\n      if (!this._image) return;\r\n      const { imageOptions, qrOptions } = this._options;\r\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\r\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\r\n\r\n      drawImageSize = calculateImageSize({\r\n        originalWidth: this._image.width,\r\n        originalHeight: this._image.height,\r\n        maxHiddenDots,\r\n        maxHiddenAxisDots: count - 14,\r\n        dotSize\r\n      });\r\n    }\r\n\r\n    this.clear();\r\n    this.drawBackground();\r\n    this.drawDots((i: number, j: number): boolean => {\r\n      if (this._options.imageOptions.hideBackgroundDots) {\r\n        if (\r\n          i >= (count - drawImageSize.hideXDots) / 2 &&\r\n          i < (count + drawImageSize.hideXDots) / 2 &&\r\n          j >= (count - drawImageSize.hideYDots) / 2 &&\r\n          j < (count + drawImageSize.hideYDots) / 2\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (squareMask[i]?.[j] || squareMask[i - count + 7]?.[j] || squareMask[i]?.[j - count + 7]) {\r\n        return false;\r\n      }\r\n\r\n      if (dotMask[i]?.[j] || dotMask[i - count + 7]?.[j] || dotMask[i]?.[j - count + 7]) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n    this.drawCorners();\r\n\r\n    if (this._options.image) {\r\n      this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\r\n    }\r\n  }\r\n\r\n  drawBackground(): void {\r\n    const canvasContext = this.context;\r\n    const options = this._options;\r\n\r\n    if (canvasContext) {\r\n      if (options.backgroundOptions.gradient) {\r\n        const gradientOptions = options.backgroundOptions.gradient;\r\n        const gradient = this._createGradient({\r\n          context: canvasContext,\r\n          options: gradientOptions,\r\n          additionalRotation: 0,\r\n          x: 0,\r\n          y: 0,\r\n          size: this._canvas.width > this._canvas.height ? this._canvas.width : this._canvas.height\r\n        });\r\n\r\n        gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\r\n          gradient.addColorStop(offset, color);\r\n        });\r\n\r\n        canvasContext.fillStyle = gradient;\r\n      } else if (options.backgroundOptions.color) {\r\n        canvasContext.fillStyle = options.backgroundOptions.color;\r\n      }\r\n      canvasContext.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n  }\r\n\r\n  drawDots(filter?: FilterFunction): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const canvasContext = this.context;\r\n\r\n    if (!canvasContext) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const options = this._options;\r\n    const count = this._qr.getModuleCount();\r\n\r\n    if (count > options.width || count > options.height) {\r\n      throw \"The canvas is too small.\";\r\n    }\r\n\r\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\r\n    const dotSize = Math.floor(minSize / count);\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n    const dot = new QRDot({ context: canvasContext, type: options.dotsOptions.type });\r\n\r\n    canvasContext.beginPath();\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      for (let j = 0; j < count; j++) {\r\n        if (filter && !filter(i, j)) {\r\n          continue;\r\n        }\r\n        if (!this._qr.isDark(i, j)) {\r\n          continue;\r\n        }\r\n        dot.draw(\r\n          xBeginning + i * dotSize,\r\n          yBeginning + j * dotSize,\r\n          dotSize,\r\n          (xOffset: number, yOffset: number): boolean => {\r\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\r\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\r\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    if (options.dotsOptions.gradient) {\r\n      const gradientOptions = options.dotsOptions.gradient;\r\n      const gradient = this._createGradient({\r\n        context: canvasContext,\r\n        options: gradientOptions,\r\n        additionalRotation: 0,\r\n        x: xBeginning,\r\n        y: yBeginning,\r\n        size: count * dotSize\r\n      });\r\n\r\n      gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\r\n        gradient.addColorStop(offset, color);\r\n      });\r\n\r\n      canvasContext.fillStyle = canvasContext.strokeStyle = gradient;\r\n    } else if (options.dotsOptions.color) {\r\n      canvasContext.fillStyle = canvasContext.strokeStyle = options.dotsOptions.color;\r\n    }\r\n\r\n    canvasContext.fill(\"evenodd\");\r\n  }\r\n\r\n  drawCorners(filter?: FilterFunction): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const canvasContext = this.context;\r\n\r\n    if (!canvasContext) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const options = this._options;\r\n\r\n    const count = this._qr.getModuleCount();\r\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\r\n    const dotSize = Math.floor(minSize / count);\r\n    const cornersSquareSize = dotSize * 7;\r\n    const cornersDotSize = dotSize * 3;\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n\r\n    [\r\n      [0, 0, 0],\r\n      [1, 0, Math.PI / 2],\r\n      [0, 1, -Math.PI / 2]\r\n    ].forEach(([column, row, rotation]) => {\r\n      if (filter && !filter(column, row)) {\r\n        return;\r\n      }\r\n\r\n      const x = xBeginning + column * dotSize * (count - 7);\r\n      const y = yBeginning + row * dotSize * (count - 7);\r\n\r\n      if (options.cornersSquareOptions?.type) {\r\n        const cornersSquare = new QRCornerSquare({ context: canvasContext, type: options.cornersSquareOptions?.type });\r\n\r\n        canvasContext.beginPath();\r\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\r\n      } else {\r\n        const dot = new QRDot({ context: canvasContext, type: options.dotsOptions.type });\r\n\r\n        canvasContext.beginPath();\r\n\r\n        for (let i = 0; i < squareMask.length; i++) {\r\n          for (let j = 0; j < squareMask[i].length; j++) {\r\n            if (!squareMask[i]?.[j]) {\r\n              continue;\r\n            }\r\n\r\n            dot.draw(\r\n              x + i * dotSize,\r\n              y + j * dotSize,\r\n              dotSize,\r\n              (xOffset: number, yOffset: number): boolean => !!squareMask[i + xOffset]?.[j + yOffset]\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (options.cornersSquareOptions?.gradient) {\r\n        const gradientOptions = options.cornersSquareOptions.gradient;\r\n        const gradient = this._createGradient({\r\n          context: canvasContext,\r\n          options: gradientOptions,\r\n          additionalRotation: rotation,\r\n          x,\r\n          y,\r\n          size: cornersSquareSize\r\n        });\r\n\r\n        gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\r\n          gradient.addColorStop(offset, color);\r\n        });\r\n\r\n        canvasContext.fillStyle = canvasContext.strokeStyle = gradient;\r\n      } else if (options.cornersSquareOptions?.color) {\r\n        canvasContext.fillStyle = canvasContext.strokeStyle = options.cornersSquareOptions.color;\r\n      }\r\n\r\n      canvasContext.fill(\"evenodd\");\r\n\r\n      if (options.cornersDotOptions?.type) {\r\n        const cornersDot = new QRCornerDot({ context: canvasContext, type: options.cornersDotOptions?.type });\r\n\r\n        canvasContext.beginPath();\r\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\r\n      } else {\r\n        const dot = new QRDot({ context: canvasContext, type: options.dotsOptions.type });\r\n\r\n        canvasContext.beginPath();\r\n\r\n        for (let i = 0; i < dotMask.length; i++) {\r\n          for (let j = 0; j < dotMask[i].length; j++) {\r\n            if (!dotMask[i]?.[j]) {\r\n              continue;\r\n            }\r\n\r\n            dot.draw(\r\n              x + i * dotSize,\r\n              y + j * dotSize,\r\n              dotSize,\r\n              (xOffset: number, yOffset: number): boolean => !!dotMask[i + xOffset]?.[j + yOffset]\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (options.cornersDotOptions?.gradient) {\r\n        const gradientOptions = options.cornersDotOptions.gradient;\r\n        const gradient = this._createGradient({\r\n          context: canvasContext,\r\n          options: gradientOptions,\r\n          additionalRotation: rotation,\r\n          x: x + dotSize * 2,\r\n          y: y + dotSize * 2,\r\n          size: cornersDotSize\r\n        });\r\n\r\n        gradientOptions.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\r\n          gradient.addColorStop(offset, color);\r\n        });\r\n\r\n        canvasContext.fillStyle = canvasContext.strokeStyle = gradient;\r\n      } else if (options.cornersDotOptions?.color) {\r\n        canvasContext.fillStyle = canvasContext.strokeStyle = options.cornersDotOptions.color;\r\n      }\r\n\r\n      canvasContext.fill(\"evenodd\");\r\n    });\r\n  }\r\n\r\n  loadImage(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      const options = this._options;\r\n      const image = new Image();\r\n\r\n      if (!options.image) {\r\n        return reject(\"Image is not defined\");\r\n      }\r\n\r\n      if (typeof options.imageOptions.crossOrigin === \"string\") {\r\n        image.crossOrigin = options.imageOptions.crossOrigin;\r\n      }\r\n\r\n      this._image = image;\r\n      image.onload = (): void => {\r\n        resolve();\r\n      };\r\n      image.src = options.image;\r\n    });\r\n  }\r\n\r\n  drawImage({\r\n    width,\r\n    height,\r\n    count,\r\n    dotSize\r\n  }: {\r\n    width: number;\r\n    height: number;\r\n    count: number;\r\n    dotSize: number;\r\n  }): void {\r\n    const canvasContext = this.context;\r\n\r\n    if (!canvasContext) {\r\n      throw \"canvasContext is not defined\";\r\n    }\r\n\r\n    if (!this._image) {\r\n      throw \"image is not defined\";\r\n    }\r\n\r\n    const options = this._options;\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n    const dx = xBeginning + options.imageOptions.margin + (count * dotSize - width) / 2;\r\n    const dy = yBeginning + options.imageOptions.margin + (count * dotSize - height) / 2;\r\n    const dw = width - options.imageOptions.margin * 2;\r\n    const dh = height - options.imageOptions.margin * 2;\r\n\r\n    canvasContext.drawImage(this._image, dx, dy, dw < 0 ? 0 : dw, dh < 0 ? 0 : dh);\r\n  }\r\n\r\n  _createGradient({\r\n    context,\r\n    options,\r\n    additionalRotation,\r\n    x,\r\n    y,\r\n    size\r\n  }: {\r\n    context: CanvasRenderingContext2D;\r\n    options: Gradient;\r\n    additionalRotation: number;\r\n    x: number;\r\n    y: number;\r\n    size: number;\r\n  }): CanvasGradient {\r\n    let gradient;\r\n\r\n    if (options.type === gradientTypes.radial) {\r\n      gradient = context.createRadialGradient(x + size / 2, y + size / 2, 0, x + size / 2, y + size / 2, size / 2);\r\n    } else {\r\n      const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\r\n      const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\r\n      let x0 = x + size / 2;\r\n      let y0 = y + size / 2;\r\n      let x1 = x + size / 2;\r\n      let y1 = y + size / 2;\r\n\r\n      if (\r\n        (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\r\n        (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\r\n      ) {\r\n        x0 = x0 - size / 2;\r\n        y0 = y0 - (size / 2) * Math.tan(rotation);\r\n        x1 = x1 + size / 2;\r\n        y1 = y1 + (size / 2) * Math.tan(rotation);\r\n      } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\r\n        y0 = y0 - size / 2;\r\n        x0 = x0 - size / 2 / Math.tan(rotation);\r\n        y1 = y1 + size / 2;\r\n        x1 = x1 + size / 2 / Math.tan(rotation);\r\n      } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\r\n        x0 = x0 + size / 2;\r\n        y0 = y0 + (size / 2) * Math.tan(rotation);\r\n        x1 = x1 - size / 2;\r\n        y1 = y1 - (size / 2) * Math.tan(rotation);\r\n      } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\r\n        y0 = y0 + size / 2;\r\n        x0 = x0 + size / 2 / Math.tan(rotation);\r\n        y1 = y1 - size / 2;\r\n        x1 = x1 - size / 2 / Math.tan(rotation);\r\n      }\r\n\r\n      gradient = context.createLinearGradient(Math.round(x0), Math.round(y0), Math.round(x1), Math.round(y1));\r\n    }\r\n\r\n    return gradient;\r\n  }\r\n}\r\n","import dotTypes from \"../../../constants/dotTypes\";\r\nimport { DotType, GetNeighbor, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../../types\";\r\n\r\nexport default class QRDot {\r\n  _element?: SVGElement;\r\n  _svg: SVGElement;\r\n  _type: DotType;\r\n\r\n  constructor({ svg, type }: { svg: SVGElement; type: DotType }) {\r\n    this._svg = svg;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\r\n    const type = this._type;\r\n    let drawFunction;\r\n\r\n    switch (type) {\r\n      case dotTypes.dots:\r\n        drawFunction = this._drawDot;\r\n        break;\r\n      case dotTypes.classy:\r\n        drawFunction = this._drawClassy;\r\n        break;\r\n      case dotTypes.classyRounded:\r\n        drawFunction = this._drawClassyRounded;\r\n        break;\r\n      case dotTypes.rounded:\r\n        drawFunction = this._drawRounded;\r\n        break;\r\n      case dotTypes.extraRounded:\r\n        drawFunction = this._drawExtraRounded;\r\n        break;\r\n      case dotTypes.square:\r\n      default:\r\n        drawFunction = this._drawSquare;\r\n    }\r\n\r\n    drawFunction.call(this, { x, y, size, getNeighbor });\r\n  }\r\n\r\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\r\n    const cx = x + size / 2;\r\n    const cy = y + size / 2;\r\n\r\n    draw();\r\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\r\n  }\r\n\r\n  _basicDot(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._element.setAttribute(\"cx\", String(x + size / 2));\r\n        this._element.setAttribute(\"cy\", String(y + size / 2));\r\n        this._element.setAttribute(\"r\", String(size / 2));\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicSquare(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n        this._element.setAttribute(\"x\", String(x));\r\n        this._element.setAttribute(\"y\", String(y));\r\n        this._element.setAttribute(\"width\", String(size));\r\n        this._element.setAttribute(\"height\", String(size));\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - right side is rounded\r\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x} ${y}` + //go to top left position\r\n            `v ${size}` + //draw line to left bottom corner\r\n            `h ${size / 2}` + //draw line to left bottom corner + half of size right\r\n            `a ${size / 2} ${size / 2}, 0, 0, 0, 0 ${-size}` // draw rounded corner\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - top right corner is rounded\r\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x} ${y}` + //go to top left position\r\n            `v ${size}` + //draw line to left bottom corner\r\n            `h ${size}` + //draw line to right bottom corner\r\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\r\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded corner\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - top right corner is rounded\r\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x} ${y}` + //go to top left position\r\n            `v ${size}` + //draw line to left bottom corner\r\n            `h ${size}` + //draw line to right bottom corner\r\n            `a ${size} ${size}, 0, 0, 0, ${-size} ${-size}` // draw rounded top right corner\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  //if rotation === 0 - left bottom and right top corners are rounded\r\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x} ${y}` + //go to left top position\r\n            `v ${size / 2}` + //draw line to left top corner + half of size bottom\r\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${size / 2} ${size / 2}` + // draw rounded left bottom corner\r\n            `h ${size / 2}` + //draw line to right bottom corner\r\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\r\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded right top corner\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  _drawDot({ x, y, size }: DrawArgs): void {\r\n    this._basicDot({ x, y, size, rotation: 0 });\r\n  }\r\n\r\n  _drawSquare({ x, y, size }: DrawArgs): void {\r\n    this._basicSquare({ x, y, size, rotation: 0 });\r\n  }\r\n\r\n  _drawRounded({ x, y, size, getNeighbor }: DrawArgs): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicDot({ x, y, size, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\r\n      this._basicSquare({ x, y, size, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 2) {\r\n      let rotation = 0;\r\n\r\n      if (leftNeighbor && topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (topNeighbor && rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (rightNeighbor && bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicCornerRounded({ x, y, size, rotation });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 1) {\r\n      let rotation = 0;\r\n\r\n      if (topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicSideRounded({ x, y, size, rotation });\r\n      return;\r\n    }\r\n  }\r\n\r\n  _drawExtraRounded({ x, y, size, getNeighbor }: DrawArgs): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicDot({ x, y, size, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\r\n      this._basicSquare({ x, y, size, rotation: 0 });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 2) {\r\n      let rotation = 0;\r\n\r\n      if (leftNeighbor && topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (topNeighbor && rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (rightNeighbor && bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicCornerExtraRounded({ x, y, size, rotation });\r\n      return;\r\n    }\r\n\r\n    if (neighborsCount === 1) {\r\n      let rotation = 0;\r\n\r\n      if (topNeighbor) {\r\n        rotation = Math.PI / 2;\r\n      } else if (rightNeighbor) {\r\n        rotation = Math.PI;\r\n      } else if (bottomNeighbor) {\r\n        rotation = -Math.PI / 2;\r\n      }\r\n\r\n      this._basicSideRounded({ x, y, size, rotation });\r\n      return;\r\n    }\r\n  }\r\n\r\n  _drawClassy({ x, y, size, getNeighbor }: DrawArgs): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!leftNeighbor && !topNeighbor) {\r\n      this._basicCornerRounded({ x, y, size, rotation: -Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!rightNeighbor && !bottomNeighbor) {\r\n      this._basicCornerRounded({ x, y, size, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    this._basicSquare({ x, y, size, rotation: 0 });\r\n  }\r\n\r\n  _drawClassyRounded({ x, y, size, getNeighbor }: DrawArgs): void {\r\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\r\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\r\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\r\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\r\n\r\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\r\n\r\n    if (neighborsCount === 0) {\r\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!leftNeighbor && !topNeighbor) {\r\n      this._basicCornerExtraRounded({ x, y, size, rotation: -Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    if (!rightNeighbor && !bottomNeighbor) {\r\n      this._basicCornerExtraRounded({ x, y, size, rotation: Math.PI / 2 });\r\n      return;\r\n    }\r\n\r\n    this._basicSquare({ x, y, size, rotation: 0 });\r\n  }\r\n}\r\n","import cornerSquareTypes from \"../../../constants/cornerSquareTypes\";\r\nimport { CornerSquareType, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../../types\";\r\n\r\nexport default class QRCornerSquare {\r\n  _element?: SVGElement;\r\n  _svg: SVGElement;\r\n  _type: CornerSquareType;\r\n\r\n  constructor({ svg, type }: { svg: SVGElement; type: CornerSquareType }) {\r\n    this._svg = svg;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, rotation: number): void {\r\n    const type = this._type;\r\n    let drawFunction;\r\n\r\n    switch (type) {\r\n      case cornerSquareTypes.square:\r\n        drawFunction = this._drawSquare;\r\n        break;\r\n      case cornerSquareTypes.extraRounded:\r\n        drawFunction = this._drawExtraRounded;\r\n        break;\r\n      case cornerSquareTypes.dot:\r\n      default:\r\n        drawFunction = this._drawDot;\r\n    }\r\n\r\n    drawFunction.call(this, { x, y, size, rotation });\r\n  }\r\n\r\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\r\n    const cx = x + size / 2;\r\n    const cy = y + size / 2;\r\n\r\n    draw();\r\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\r\n  }\r\n\r\n  _basicDot(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n    const dotSize = size / 7;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x + size / 2} ${y}` + // M cx, y //  Move to top of ring\r\n            `a ${size / 2} ${size / 2} 0 1 0 0.1 0` + // a outerRadius, outerRadius, 0, 1, 0, 1, 0 // Draw outer arc, but don't close it\r\n            `z` + // Z // Close the outer shape\r\n            `m 0 ${dotSize}` + // m -1 outerRadius-innerRadius // Move to top point of inner radius\r\n            `a ${size / 2 - dotSize} ${size / 2 - dotSize} 0 1 1 -0.1 0` + // a innerRadius, innerRadius, 0, 1, 1, -1, 0 // Draw inner arc, but don't close it\r\n            `Z` // Z // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicSquare(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n    const dotSize = size / 7;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x} ${y}` +\r\n            `v ${size}` +\r\n            `h ${size}` +\r\n            `v ${-size}` +\r\n            `z` +\r\n            `M ${x + dotSize} ${y + dotSize}` +\r\n            `h ${size - 2 * dotSize}` +\r\n            `v ${size - 2 * dotSize}` +\r\n            `h ${-size + 2 * dotSize}` +\r\n            `z`\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n    const dotSize = size / 7;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\r\n        this._element.setAttribute(\r\n          \"d\",\r\n          `M ${x} ${y + 2.5 * dotSize}` +\r\n            `v ${2 * dotSize}` +\r\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${dotSize * 2.5}` +\r\n            `h ${2 * dotSize}` +\r\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${-dotSize * 2.5}` +\r\n            `v ${-2 * dotSize}` +\r\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${-dotSize * 2.5}` +\r\n            `h ${-2 * dotSize}` +\r\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${dotSize * 2.5}` +\r\n            `M ${x + 2.5 * dotSize} ${y + dotSize}` +\r\n            `h ${2 * dotSize}` +\r\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${dotSize * 1.5}` +\r\n            `v ${2 * dotSize}` +\r\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${dotSize * 1.5}` +\r\n            `h ${-2 * dotSize}` +\r\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${-dotSize * 1.5}` +\r\n            `v ${-2 * dotSize}` +\r\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${-dotSize * 1.5}`\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\r\n    this._basicDot({ x, y, size, rotation });\r\n  }\r\n\r\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\r\n    this._basicSquare({ x, y, size, rotation });\r\n  }\r\n\r\n  _drawExtraRounded({ x, y, size, rotation }: DrawArgs): void {\r\n    this._basicExtraRounded({ x, y, size, rotation });\r\n  }\r\n}\r\n","import cornerDotTypes from \"../../../constants/cornerDotTypes\";\r\nimport { CornerDotType, RotateFigureArgs, BasicFigureDrawArgs, DrawArgs } from \"../../../types\";\r\n\r\nexport default class QRCornerDot {\r\n  _element?: SVGElement;\r\n  _svg: SVGElement;\r\n  _type: CornerDotType;\r\n\r\n  constructor({ svg, type }: { svg: SVGElement; type: CornerDotType }) {\r\n    this._svg = svg;\r\n    this._type = type;\r\n  }\r\n\r\n  draw(x: number, y: number, size: number, rotation: number): void {\r\n    const type = this._type;\r\n    let drawFunction;\r\n\r\n    switch (type) {\r\n      case cornerDotTypes.square:\r\n        drawFunction = this._drawSquare;\r\n        break;\r\n      case cornerDotTypes.dot:\r\n      default:\r\n        drawFunction = this._drawDot;\r\n    }\r\n\r\n    drawFunction.call(this, { x, y, size, rotation });\r\n  }\r\n\r\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\r\n    const cx = x + size / 2;\r\n    const cy = y + size / 2;\r\n\r\n    draw();\r\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\r\n  }\r\n\r\n  _basicDot(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._element.setAttribute(\"cx\", String(x + size / 2));\r\n        this._element.setAttribute(\"cy\", String(y + size / 2));\r\n        this._element.setAttribute(\"r\", String(size / 2));\r\n      }\r\n    });\r\n  }\r\n\r\n  _basicSquare(args: BasicFigureDrawArgs): void {\r\n    const { size, x, y } = args;\r\n\r\n    this._rotateFigure({\r\n      ...args,\r\n      draw: () => {\r\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n        this._element.setAttribute(\"x\", String(x));\r\n        this._element.setAttribute(\"y\", String(y));\r\n        this._element.setAttribute(\"width\", String(size));\r\n        this._element.setAttribute(\"height\", String(size));\r\n      }\r\n    });\r\n  }\r\n\r\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\r\n    this._basicDot({ x, y, size, rotation });\r\n  }\r\n\r\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\r\n    this._basicSquare({ x, y, size, rotation });\r\n  }\r\n}\r\n","import calculateImageSize from \"../tools/calculateImageSize\";\r\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\r\nimport QRDot from \"../figures/dot/svg/QRDot\";\r\nimport QRCornerSquare from \"../figures/cornerSquare/svg/QRCornerSquare\";\r\nimport QRCornerDot from \"../figures/cornerDot/svg/QRCornerDot\";\r\nimport { RequiredOptions } from \"./QROptions\";\r\nimport gradientTypes from \"../constants/gradientTypes\";\r\nimport { QRCode, FilterFunction, Gradient } from \"../types\";\r\n\r\nconst squareMask = [\r\n  [1, 1, 1, 1, 1, 1, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 0, 0, 0, 0, 0, 1],\r\n  [1, 1, 1, 1, 1, 1, 1]\r\n];\r\n\r\nconst dotMask = [\r\n  [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 1, 1, 1, 0, 0],\r\n  [0, 0, 1, 1, 1, 0, 0],\r\n  [0, 0, 1, 1, 1, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 0]\r\n];\r\n\r\nexport default class QRSVG {\r\n  _element: SVGElement;\r\n  _defs: SVGElement;\r\n  _dotsClipPath?: SVGElement;\r\n  _cornersSquareClipPath?: SVGElement;\r\n  _cornersDotClipPath?: SVGElement;\r\n  _options: RequiredOptions;\r\n  _qr?: QRCode;\r\n  _image?: HTMLImageElement;\r\n\r\n  //TODO don't pass all options to this class\r\n  constructor(options: RequiredOptions) {\r\n    this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    this._element.setAttribute(\"width\", String(options.width));\r\n    this._element.setAttribute(\"height\", String(options.height));\r\n    this._defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\r\n    this._element.appendChild(this._defs);\r\n\r\n    this._options = options;\r\n  }\r\n\r\n  get width(): number {\r\n    return this._options.width;\r\n  }\r\n\r\n  get height(): number {\r\n    return this._options.height;\r\n  }\r\n\r\n  getElement(): SVGElement {\r\n    return this._element;\r\n  }\r\n\r\n  clear(): void {\r\n    const oldElement = this._element;\r\n    this._element = oldElement.cloneNode(false) as SVGElement;\r\n    oldElement?.parentNode?.replaceChild(this._element, oldElement);\r\n    this._defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\r\n    this._element.appendChild(this._defs);\r\n  }\r\n\r\n  async drawQR(qr: QRCode): Promise<void> {\r\n    const count = qr.getModuleCount();\r\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\r\n    const dotSize = Math.floor(minSize / count);\r\n    let drawImageSize = {\r\n      hideXDots: 0,\r\n      hideYDots: 0,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n\r\n    this._qr = qr;\r\n\r\n    if (this._options.image) {\r\n      //We need it to get image size\r\n      await this.loadImage();\r\n      if (!this._image) return;\r\n      const { imageOptions, qrOptions } = this._options;\r\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\r\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\r\n\r\n      drawImageSize = calculateImageSize({\r\n        originalWidth: this._image.width,\r\n        originalHeight: this._image.height,\r\n        maxHiddenDots,\r\n        maxHiddenAxisDots: count - 14,\r\n        dotSize\r\n      });\r\n    }\r\n\r\n    this.clear();\r\n    this.drawBackground();\r\n    this.drawDots((i: number, j: number): boolean => {\r\n      if (this._options.imageOptions.hideBackgroundDots) {\r\n        if (\r\n          i >= (count - drawImageSize.hideXDots) / 2 &&\r\n          i < (count + drawImageSize.hideXDots) / 2 &&\r\n          j >= (count - drawImageSize.hideYDots) / 2 &&\r\n          j < (count + drawImageSize.hideYDots) / 2\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      if (squareMask[i]?.[j] || squareMask[i - count + 7]?.[j] || squareMask[i]?.[j - count + 7]) {\r\n        return false;\r\n      }\r\n\r\n      if (dotMask[i]?.[j] || dotMask[i - count + 7]?.[j] || dotMask[i]?.[j - count + 7]) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n    this.drawCorners();\r\n\r\n    if (this._options.image) {\r\n      this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\r\n    }\r\n  }\r\n\r\n  drawBackground(): void {\r\n    const element = this._element;\r\n    const options = this._options;\r\n\r\n    if (element) {\r\n      const gradientOptions = options.backgroundOptions?.gradient;\r\n      const color = options.backgroundOptions?.color;\r\n\r\n      if (gradientOptions || color) {\r\n        this._createColor({\r\n          options: gradientOptions,\r\n          color: color,\r\n          additionalRotation: 0,\r\n          x: 0,\r\n          y: 0,\r\n          height: options.height,\r\n          width: options.width,\r\n          name: \"background-color\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  drawDots(filter?: FilterFunction): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const options = this._options;\r\n    const count = this._qr.getModuleCount();\r\n\r\n    if (count > options.width || count > options.height) {\r\n      throw \"The canvas is too small.\";\r\n    }\r\n\r\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\r\n    const dotSize = Math.floor(minSize / count);\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n    const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\r\n\r\n    this._dotsClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\r\n    this._dotsClipPath.setAttribute(\"id\", \"clip-path-dot-color\");\r\n    this._defs.appendChild(this._dotsClipPath);\r\n\r\n    this._createColor({\r\n      options: options.dotsOptions?.gradient,\r\n      color: options.dotsOptions.color,\r\n      additionalRotation: 0,\r\n      x: xBeginning,\r\n      y: yBeginning,\r\n      height: count * dotSize,\r\n      width: count * dotSize,\r\n      name: \"dot-color\"\r\n    });\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      for (let j = 0; j < count; j++) {\r\n        if (filter && !filter(i, j)) {\r\n          continue;\r\n        }\r\n        if (!this._qr?.isDark(i, j)) {\r\n          continue;\r\n        }\r\n\r\n        dot.draw(\r\n          xBeginning + i * dotSize,\r\n          yBeginning + j * dotSize,\r\n          dotSize,\r\n          (xOffset: number, yOffset: number): boolean => {\r\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\r\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\r\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\r\n          }\r\n        );\r\n\r\n        if (dot._element && this._dotsClipPath) {\r\n          this._dotsClipPath.appendChild(dot._element);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawCorners(): void {\r\n    if (!this._qr) {\r\n      throw \"QR code is not defined\";\r\n    }\r\n\r\n    const element = this._element;\r\n    const options = this._options;\r\n\r\n    if (!element) {\r\n      throw \"Element code is not defined\";\r\n    }\r\n\r\n    const count = this._qr.getModuleCount();\r\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\r\n    const dotSize = Math.floor(minSize / count);\r\n    const cornersSquareSize = dotSize * 7;\r\n    const cornersDotSize = dotSize * 3;\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n\r\n    [\r\n      [0, 0, 0],\r\n      [1, 0, Math.PI / 2],\r\n      [0, 1, -Math.PI / 2]\r\n    ].forEach(([column, row, rotation]) => {\r\n      const x = xBeginning + column * dotSize * (count - 7);\r\n      const y = yBeginning + row * dotSize * (count - 7);\r\n      let cornersSquareClipPath = this._dotsClipPath;\r\n      let cornersDotClipPath = this._dotsClipPath;\r\n\r\n      if (options.cornersSquareOptions?.gradient || options.cornersSquareOptions?.color) {\r\n        cornersSquareClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\r\n        cornersSquareClipPath.setAttribute(\"id\", `clip-path-corners-square-color-${column}-${row}`);\r\n        this._defs.appendChild(cornersSquareClipPath);\r\n        this._cornersSquareClipPath = this._cornersDotClipPath = cornersDotClipPath = cornersSquareClipPath;\r\n\r\n        this._createColor({\r\n          options: options.cornersSquareOptions?.gradient,\r\n          color: options.cornersSquareOptions?.color,\r\n          additionalRotation: rotation,\r\n          x,\r\n          y,\r\n          height: cornersSquareSize,\r\n          width: cornersSquareSize,\r\n          name: `corners-square-color-${column}-${row}`\r\n        });\r\n      }\r\n\r\n      if (options.cornersSquareOptions?.type) {\r\n        const cornersSquare = new QRCornerSquare({ svg: this._element, type: options.cornersSquareOptions.type });\r\n\r\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\r\n\r\n        if (cornersSquare._element && cornersSquareClipPath) {\r\n          cornersSquareClipPath.appendChild(cornersSquare._element);\r\n        }\r\n      } else {\r\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\r\n\r\n        for (let i = 0; i < squareMask.length; i++) {\r\n          for (let j = 0; j < squareMask[i].length; j++) {\r\n            if (!squareMask[i]?.[j]) {\r\n              continue;\r\n            }\r\n\r\n            dot.draw(\r\n              x + i * dotSize,\r\n              y + j * dotSize,\r\n              dotSize,\r\n              (xOffset: number, yOffset: number): boolean => !!squareMask[i + xOffset]?.[j + yOffset]\r\n            );\r\n\r\n            if (dot._element && cornersSquareClipPath) {\r\n              cornersSquareClipPath.appendChild(dot._element);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (options.cornersDotOptions?.gradient || options.cornersDotOptions?.color) {\r\n        cornersDotClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\r\n        cornersDotClipPath.setAttribute(\"id\", `clip-path-corners-dot-color-${column}-${row}`);\r\n        this._defs.appendChild(cornersDotClipPath);\r\n        this._cornersDotClipPath = cornersDotClipPath;\r\n\r\n        this._createColor({\r\n          options: options.cornersDotOptions?.gradient,\r\n          color: options.cornersDotOptions?.color,\r\n          additionalRotation: rotation,\r\n          x: x + dotSize * 2,\r\n          y: y + dotSize * 2,\r\n          height: cornersDotSize,\r\n          width: cornersDotSize,\r\n          name: `corners-dot-color-${column}-${row}`\r\n        });\r\n      }\r\n\r\n      if (options.cornersDotOptions?.type) {\r\n        const cornersDot = new QRCornerDot({ svg: this._element, type: options.cornersDotOptions.type });\r\n\r\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\r\n\r\n        if (cornersDot._element && cornersDotClipPath) {\r\n          cornersDotClipPath.appendChild(cornersDot._element);\r\n        }\r\n      } else {\r\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\r\n\r\n        for (let i = 0; i < dotMask.length; i++) {\r\n          for (let j = 0; j < dotMask[i].length; j++) {\r\n            if (!dotMask[i]?.[j]) {\r\n              continue;\r\n            }\r\n\r\n            dot.draw(\r\n              x + i * dotSize,\r\n              y + j * dotSize,\r\n              dotSize,\r\n              (xOffset: number, yOffset: number): boolean => !!dotMask[i + xOffset]?.[j + yOffset]\r\n            );\r\n\r\n            if (dot._element && cornersDotClipPath) {\r\n              cornersDotClipPath.appendChild(dot._element);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  loadImage(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      const options = this._options;\r\n      const image = new Image();\r\n\r\n      if (!options.image) {\r\n        return reject(\"Image is not defined\");\r\n      }\r\n\r\n      if (typeof options.imageOptions.crossOrigin === \"string\") {\r\n        image.crossOrigin = options.imageOptions.crossOrigin;\r\n      }\r\n\r\n      this._image = image;\r\n      image.onload = (): void => {\r\n        resolve();\r\n      };\r\n      image.src = options.image;\r\n    });\r\n  }\r\n\r\n  drawImage({\r\n    width,\r\n    height,\r\n    count,\r\n    dotSize\r\n  }: {\r\n    width: number;\r\n    height: number;\r\n    count: number;\r\n    dotSize: number;\r\n  }): void {\r\n    const options = this._options;\r\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\r\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\r\n    const dx = xBeginning + options.imageOptions.margin + (count * dotSize - width) / 2;\r\n    const dy = yBeginning + options.imageOptions.margin + (count * dotSize - height) / 2;\r\n    const dw = width - options.imageOptions.margin * 2;\r\n    const dh = height - options.imageOptions.margin * 2;\r\n\r\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n    image.setAttribute(\"href\", options.image || \"\");\r\n    image.setAttribute(\"x\", String(dx));\r\n    image.setAttribute(\"y\", String(dy));\r\n    image.setAttribute(\"width\", `${dw}px`);\r\n    image.setAttribute(\"height\", `${dh}px`);\r\n\r\n    this._element.appendChild(image);\r\n  }\r\n\r\n  _createColor({\r\n    options,\r\n    color,\r\n    additionalRotation,\r\n    x,\r\n    y,\r\n    height,\r\n    width,\r\n    name\r\n  }: {\r\n    options?: Gradient;\r\n    color?: string;\r\n    additionalRotation: number;\r\n    x: number;\r\n    y: number;\r\n    height: number;\r\n    width: number;\r\n    name: string;\r\n  }): void {\r\n    const size = width > height ? width : height;\r\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n    rect.setAttribute(\"x\", String(x));\r\n    rect.setAttribute(\"y\", String(y));\r\n    rect.setAttribute(\"height\", String(height));\r\n    rect.setAttribute(\"width\", String(width));\r\n    rect.setAttribute(\"clip-path\", `url('#clip-path-${name}')`);\r\n\r\n    if (options) {\r\n      let gradient: SVGElement;\r\n      if (options.type === gradientTypes.radial) {\r\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\");\r\n        gradient.setAttribute(\"id\", name);\r\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\r\n        gradient.setAttribute(\"fx\", String(x + width / 2));\r\n        gradient.setAttribute(\"fy\", String(y + height / 2));\r\n        gradient.setAttribute(\"cx\", String(x + width / 2));\r\n        gradient.setAttribute(\"cy\", String(y + height / 2));\r\n        gradient.setAttribute(\"r\", String(size / 2));\r\n      } else {\r\n        const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\r\n        const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\r\n        let x0 = x + width / 2;\r\n        let y0 = y + height / 2;\r\n        let x1 = x + width / 2;\r\n        let y1 = y + height / 2;\r\n\r\n        if (\r\n          (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\r\n          (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\r\n        ) {\r\n          x0 = x0 - width / 2;\r\n          y0 = y0 - (height / 2) * Math.tan(rotation);\r\n          x1 = x1 + width / 2;\r\n          y1 = y1 + (height / 2) * Math.tan(rotation);\r\n        } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\r\n          y0 = y0 - height / 2;\r\n          x0 = x0 - width / 2 / Math.tan(rotation);\r\n          y1 = y1 + height / 2;\r\n          x1 = x1 + width / 2 / Math.tan(rotation);\r\n        } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\r\n          x0 = x0 + width / 2;\r\n          y0 = y0 + (height / 2) * Math.tan(rotation);\r\n          x1 = x1 - width / 2;\r\n          y1 = y1 - (height / 2) * Math.tan(rotation);\r\n        } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\r\n          y0 = y0 + height / 2;\r\n          x0 = x0 + width / 2 / Math.tan(rotation);\r\n          y1 = y1 - height / 2;\r\n          x1 = x1 - width / 2 / Math.tan(rotation);\r\n        }\r\n\r\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\r\n        gradient.setAttribute(\"id\", name);\r\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\r\n        gradient.setAttribute(\"x1\", String(Math.round(x0)));\r\n        gradient.setAttribute(\"y1\", String(Math.round(y0)));\r\n        gradient.setAttribute(\"x2\", String(Math.round(x1)));\r\n        gradient.setAttribute(\"y2\", String(Math.round(y1)));\r\n      }\r\n\r\n      options.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\r\n        const stop = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\r\n        stop.setAttribute(\"offset\", `${100 * offset}%`);\r\n        stop.setAttribute(\"stop-color\", color);\r\n        gradient.appendChild(stop);\r\n      });\r\n\r\n      rect.setAttribute(\"fill\", `url('#${name}')`);\r\n      this._defs.appendChild(gradient);\r\n    } else if (color) {\r\n      rect.setAttribute(\"fill\", color);\r\n    }\r\n\r\n    this._element.appendChild(rect);\r\n  }\r\n}\r\n","import { DrawTypes } from \"../types\";\r\n\r\nexport default {\r\n  canvas: \"canvas\",\r\n  svg: \"svg\"\r\n} as DrawTypes;\r\n","import { TypeNumber } from \"../types\";\r\n\r\ninterface TypesMap {\r\n  [key: number]: TypeNumber;\r\n}\r\n\r\nconst qrTypes: TypesMap = {};\r\n\r\nfor (let type = 0; type <= 40; type++) {\r\n  qrTypes[type] = type as TypeNumber;\r\n}\r\n\r\n// 0 types is autodetect\r\n\r\n// types = {\r\n//     0: 0,\r\n//     1: 1,\r\n//     ...\r\n//     40: 40\r\n// }\r\n\r\nexport default qrTypes;\r\n","import { ErrorCorrectionLevel } from \"../types\";\r\n\r\ninterface ErrorCorrectionLevels {\r\n  [key: string]: ErrorCorrectionLevel;\r\n}\r\n\r\nexport default {\r\n  L: \"L\",\r\n  M: \"M\",\r\n  Q: \"Q\",\r\n  H: \"H\"\r\n} as ErrorCorrectionLevels;\r\n","import qrTypes from \"../constants/qrTypes\";\r\nimport drawTypes from \"../constants/drawTypes\";\r\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\r\nimport { DotType, Options, TypeNumber, ErrorCorrectionLevel, Mode, DrawType, Gradient } from \"../types\";\r\n\r\nexport interface RequiredOptions extends Options {\r\n  type: DrawType;\r\n  width: number;\r\n  height: number;\r\n  margin: number;\r\n  data: string;\r\n  qrOptions: {\r\n    typeNumber: TypeNumber;\r\n    mode?: Mode;\r\n    errorCorrectionLevel: ErrorCorrectionLevel;\r\n  };\r\n  imageOptions: {\r\n    hideBackgroundDots: boolean;\r\n    imageSize: number;\r\n    crossOrigin?: string;\r\n    margin: number;\r\n  };\r\n  dotsOptions: {\r\n    type: DotType;\r\n    color: string;\r\n    gradient?: Gradient;\r\n  };\r\n  backgroundOptions: {\r\n    color: string;\r\n    gradient?: Gradient;\r\n  };\r\n}\r\n\r\nconst defaultOptions: RequiredOptions = {\r\n  type: drawTypes.canvas,\r\n  width: 300,\r\n  height: 300,\r\n  data: \"\",\r\n  margin: 0,\r\n  qrOptions: {\r\n    typeNumber: qrTypes[0],\r\n    mode: undefined,\r\n    errorCorrectionLevel: errorCorrectionLevels.Q\r\n  },\r\n  imageOptions: {\r\n    hideBackgroundDots: true,\r\n    imageSize: 0.4,\r\n    crossOrigin: undefined,\r\n    margin: 0\r\n  },\r\n  dotsOptions: {\r\n    type: \"square\",\r\n    color: \"#000\"\r\n  },\r\n  backgroundOptions: {\r\n    color: \"#fff\"\r\n  }\r\n};\r\n\r\nexport default defaultOptions;\r\n","import { RequiredOptions } from \"../core/QROptions\";\r\nimport { Gradient } from \"../types\";\r\n\r\nfunction sanitizeGradient(gradient: Gradient): Gradient {\r\n  const newGradient = { ...gradient };\r\n\r\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\r\n    throw \"Field 'colorStops' is required in gradient\";\r\n  }\r\n\r\n  if (newGradient.rotation) {\r\n    newGradient.rotation = Number(newGradient.rotation);\r\n  } else {\r\n    newGradient.rotation = 0;\r\n  }\r\n\r\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\r\n    ...colorStop,\r\n    offset: Number(colorStop.offset)\r\n  }));\r\n\r\n  return newGradient;\r\n}\r\n\r\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\r\n  const newOptions = { ...options };\r\n\r\n  newOptions.width = Number(newOptions.width);\r\n  newOptions.height = Number(newOptions.height);\r\n  newOptions.margin = Number(newOptions.margin);\r\n  newOptions.imageOptions = {\r\n    ...newOptions.imageOptions,\r\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\r\n    imageSize: Number(newOptions.imageOptions.imageSize),\r\n    margin: Number(newOptions.imageOptions.margin)\r\n  };\r\n\r\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\r\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\r\n  }\r\n\r\n  newOptions.dotsOptions = {\r\n    ...newOptions.dotsOptions\r\n  };\r\n  if (newOptions.dotsOptions.gradient) {\r\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\r\n  }\r\n\r\n  if (newOptions.cornersSquareOptions) {\r\n    newOptions.cornersSquareOptions = {\r\n      ...newOptions.cornersSquareOptions\r\n    };\r\n    if (newOptions.cornersSquareOptions.gradient) {\r\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\r\n    }\r\n  }\r\n\r\n  if (newOptions.cornersDotOptions) {\r\n    newOptions.cornersDotOptions = {\r\n      ...newOptions.cornersDotOptions\r\n    };\r\n    if (newOptions.cornersDotOptions.gradient) {\r\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\r\n    }\r\n  }\r\n\r\n  if (newOptions.backgroundOptions) {\r\n    newOptions.backgroundOptions = {\r\n      ...newOptions.backgroundOptions\r\n    };\r\n    if (newOptions.backgroundOptions.gradient) {\r\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\r\n    }\r\n  }\r\n\r\n  return newOptions;\r\n}\r\n","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","import getMode from \"../tools/getMode\";\r\nimport mergeDeep from \"../tools/merge\";\r\nimport downloadURI from \"../tools/downloadURI\";\r\nimport QRCanvas from \"./QRCanvas\";\r\nimport QRSVG from \"./QRSVG\";\r\nimport drawTypes from \"../constants/drawTypes\";\r\n\r\nimport defaultOptions, { RequiredOptions } from \"./QROptions\";\r\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\r\nimport { Extension, QRCode, Options, DownloadOptions } from \"../types\";\r\nimport qrcode from \"qrcode-generator\";\r\n\r\nexport default class QRCodeStyling {\r\n  _options: RequiredOptions;\r\n  _container?: HTMLElement;\r\n  _canvas?: QRCanvas;\r\n  _svg?: QRSVG;\r\n  _qr?: QRCode;\r\n  _canvasDrawingPromise?: Promise<void>;\r\n  _svgDrawingPromise?: Promise<void>;\r\n\r\n  constructor(options?: Partial<Options>) {\r\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\r\n    this.update();\r\n  }\r\n\r\n  static _clearContainer(container?: HTMLElement): void {\r\n    if (container) {\r\n      container.innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  async _getQRStylingElement(extension: Extension = \"png\"): Promise<QRCanvas | QRSVG> {\r\n    if (!this._qr) throw \"QR code is empty\";\r\n\r\n    if (extension.toLowerCase() === \"svg\") {\r\n      let promise, svg: QRSVG;\r\n\r\n      if (this._svg && this._svgDrawingPromise) {\r\n        svg = this._svg;\r\n        promise = this._svgDrawingPromise;\r\n      } else {\r\n        svg = new QRSVG(this._options);\r\n        promise = svg.drawQR(this._qr);\r\n      }\r\n\r\n      await promise;\r\n\r\n      return svg;\r\n    } else {\r\n      let promise, canvas: QRCanvas;\r\n\r\n      if (this._canvas && this._canvasDrawingPromise) {\r\n        canvas = this._canvas;\r\n        promise = this._canvasDrawingPromise;\r\n      } else {\r\n        canvas = new QRCanvas(this._options);\r\n        promise = canvas.drawQR(this._qr);\r\n      }\r\n\r\n      await promise;\r\n\r\n      return canvas;\r\n    }\r\n  }\r\n\r\n  update(options?: Partial<Options>): void {\r\n    QRCodeStyling._clearContainer(this._container);\r\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\r\n\r\n    if (!this._options.data) {\r\n      return;\r\n    }\r\n\r\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\r\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\r\n    this._qr.make();\r\n\r\n    if (this._options.type === drawTypes.canvas) {\r\n      this._canvas = new QRCanvas(this._options);\r\n      this._canvasDrawingPromise = this._canvas.drawQR(this._qr);\r\n      this._svgDrawingPromise = undefined;\r\n      this._svg = undefined;\r\n    } else {\r\n      this._svg = new QRSVG(this._options);\r\n      this._svgDrawingPromise = this._svg.drawQR(this._qr);\r\n      this._canvasDrawingPromise = undefined;\r\n      this._canvas = undefined;\r\n    }\r\n\r\n    this.append(this._container);\r\n  }\r\n\r\n  append(container?: HTMLElement): void {\r\n    if (!container) {\r\n      return;\r\n    }\r\n\r\n    if (typeof container.appendChild !== \"function\") {\r\n      throw \"Container should be a single DOM node\";\r\n    }\r\n\r\n    if (this._options.type === drawTypes.canvas) {\r\n      if (this._canvas) {\r\n        container.appendChild(this._canvas.getCanvas());\r\n      }\r\n    } else {\r\n      if (this._svg) {\r\n        container.appendChild(this._svg.getElement());\r\n      }\r\n    }\r\n\r\n    this._container = container;\r\n  }\r\n\r\n  async getRawData(extension: Extension = \"png\"): Promise<Blob | null> {\r\n    if (!this._qr) throw \"QR code is empty\";\r\n    const element = await this._getQRStylingElement(extension);\r\n\r\n    if (extension.toLowerCase() === \"svg\") {\r\n      const serializer = new XMLSerializer();\r\n      const source = serializer.serializeToString(((element as unknown) as QRSVG).getElement());\r\n\r\n      return new Blob(['<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source], { type: \"image/svg+xml\" });\r\n    } else {\r\n      return new Promise((resolve) =>\r\n        ((element as unknown) as QRCanvas).getCanvas().toBlob(resolve, `image/${extension}`, 1)\r\n      );\r\n    }\r\n  }\r\n\r\n  async download(downloadOptions?: Partial<DownloadOptions> | string): Promise<void> {\r\n    if (!this._qr) throw \"QR code is empty\";\r\n    let extension = \"png\" as Extension;\r\n    let name = \"qr\";\r\n\r\n    //TODO remove deprecated code in the v2\r\n    if (typeof downloadOptions === \"string\") {\r\n      extension = downloadOptions as Extension;\r\n      console.warn(\r\n        \"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\"\r\n      );\r\n    } else if (typeof downloadOptions === \"object\" && downloadOptions !== null) {\r\n      if (downloadOptions.name) {\r\n        name = downloadOptions.name;\r\n      }\r\n      if (downloadOptions.extension) {\r\n        extension = downloadOptions.extension;\r\n      }\r\n    }\r\n\r\n    const element = await this._getQRStylingElement(extension);\r\n\r\n    if (extension.toLowerCase() === \"svg\") {\r\n      const serializer = new XMLSerializer();\r\n      let source = serializer.serializeToString(((element as unknown) as QRSVG).getElement());\r\n\r\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\r\n      const url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\r\n      downloadURI(url, `${name}.svg`);\r\n    } else {\r\n      const url = ((element as unknown) as QRCanvas).getCanvas().toDataURL(`image/${extension}`);\r\n      downloadURI(url, `${name}.${extension}`);\r\n    }\r\n  }\r\n}\r\n"],"names":["squareMask","dotMask","QRDot","QRCornerSquare","_a","QRCornerDot","color","qrcode","typeNumber","errorCorrectionLevel","unicodeMap","_num","num","_this","data"],"mappings":"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","x_google_ignoreList":[23]}